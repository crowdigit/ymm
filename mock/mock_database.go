// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/crowdigit/ymm/db (interfaces: Database)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	db "github.com/crowdigit/ymm/db"
	gomock "github.com/golang/mock/gomock"
)

// MockDatabase is a mock of Database interface.
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase.
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance.
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockDatabase) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockDatabaseMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockDatabase)(nil).Close))
}

// GetUploader mocks base method.
func (m *MockDatabase) GetUploader(arg0 db.GetUploaderQueryBuilder) ([]db.Uploader, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUploader", arg0)
	ret0, _ := ret[0].([]db.Uploader)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUploader indicates an expected call of GetUploader.
func (mr *MockDatabaseMockRecorder) GetUploader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUploader", reflect.TypeOf((*MockDatabase)(nil).GetUploader), arg0)
}

// SetUploader mocks base method.
func (m *MockDatabase) SetUploader(arg0 db.SetUploaderQueryBuilder) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetUploader", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetUploader indicates an expected call of SetUploader.
func (mr *MockDatabaseMockRecorder) SetUploader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUploader", reflect.TypeOf((*MockDatabase)(nil).SetUploader), arg0)
}

// StoreMetadata mocks base method.
func (m *MockDatabase) StoreMetadata(arg0 string, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreMetadata", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreMetadata indicates an expected call of StoreMetadata.
func (mr *MockDatabaseMockRecorder) StoreMetadata(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreMetadata", reflect.TypeOf((*MockDatabase)(nil).StoreMetadata), arg0, arg1)
}
