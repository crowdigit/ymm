// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/crowdigit/ymm/loudness (interfaces: LoudnessScanner)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLoudnessScanner is a mock of LoudnessScanner interface.
type MockLoudnessScanner struct {
	ctrl     *gomock.Controller
	recorder *MockLoudnessScannerMockRecorder
}

// MockLoudnessScannerMockRecorder is the mock recorder for MockLoudnessScanner.
type MockLoudnessScannerMockRecorder struct {
	mock *MockLoudnessScanner
}

// NewMockLoudnessScanner creates a new mock instance.
func NewMockLoudnessScanner(ctrl *gomock.Controller) *MockLoudnessScanner {
	mock := &MockLoudnessScanner{ctrl: ctrl}
	mock.recorder = &MockLoudnessScannerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoudnessScanner) EXPECT() *MockLoudnessScannerMockRecorder {
	return m.recorder
}

// Tag mocks base method.
func (m *MockLoudnessScanner) Tag(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Tag", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Tag indicates an expected call of Tag.
func (mr *MockLoudnessScannerMockRecorder) Tag(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Tag", reflect.TypeOf((*MockLoudnessScanner)(nil).Tag), arg0)
}
